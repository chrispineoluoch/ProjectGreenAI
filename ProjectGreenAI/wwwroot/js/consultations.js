
/**This loads the latest group of conversations when the page loads*/
$(document).ready(function () {
    GetData();
    LoadLatestConvos();
    UpdateSentimentElements();
    setInterval(function () { UpdateSentimentElements(); }, 1000);
    setInterval(function () { GetData(); }, 3000);
});

/**This code loads list of conversations by grouping them by conversation Id*/
function GetData() {
    $.ajax({
        type: "GET",
        url: "/Home/GetData",
        dataType: "json",
        success: function (data) {
            var list = $("#list-data");
            list.empty();
            var identifier;

            /**This code converts the title to a date and then uses it to sort in descending order*/
            data.sort(function (a, b) {
                return new Date(b.title) - new Date(a.title);
            });

            $.each(data, function (i, item) {
                var li = $("<li>", { class: "list-group-item bg-warm_light text-warm", style: "cursor: pointer;" });
                var span = $("<span>", { class: "fa fa-lightbulb me-3" });
                var a = $("<a>", { href: "#", text: "Tarehe ya " + item.title, class: "fs-14 sidemenu-link" });
                var badge = $("<span>", { text: item.count, class: "badge bg-warm rounded-pill ms-2 float-end" });
                /**This code adds the identifier to the LoadConvo function when the a element is clicked*/
                li.on("click", function (e) {
                    identifier = item.identifier ?? null;
                    e.preventDefault();
                    LoadConvo(identifier);
                });
                li.append(span);
                li.append(a);
                li.append(badge);
                list.append(li);
            });
        },
        error: function (ex) {
            console.log(ex);
        }
    });
}

/**This code loads the clicked group of conversations*/
function LoadConvo(identifier) {
    $.ajax({
        type: "GET",
        url: "/Home/LoadConvos",
        data: { identifier: identifier },
        dataType: "json",
        success: function (data) {
            var list = $("#convo-data");
            list.empty();
            $.each(data, function (i, item) {
                if (item.speaker == "AI") {
                    var li = $("<li>", { class: "list-group-item bg-warm_light_ai text-warm" });
                    var span = $("<span>", { class: "fa fa-user-astronaut me-3" });
                    var a = $("<a>", { href: "#", text: item.speech, id: "ai-capconversation", class: "sidemenu-link" });
                    var breakline = $("<br />");
                    var volumeicon = $("<span>", { class: "fa fa-circle-play text-warm my-volume-button float-end", "data-bs-toggle": "modal", "data-bs-target": "#audioModal", style: "cursor: pointer; font-size: 20px;" });
                    var encouragement = $("<a>", { text: "Je, ni sura ipi inaambatana na maoni yako? ", class: "fs-12 sidemenu-link" });
                    var linebreak = $("<br />");
                    var dynamicId = "sentiment-id-" + item.id;
                    var dynamicIdinput = $("<input>", { id: "capdynamicid", class: "d-none", value: dynamicId });

                    /**These are the sentiment fields*/
                    var stronglyagreesentiment = $("<span>", { id: dynamicId + "-strongly-agree", class: "fa fa-smile-beam ms-2 my-like-strongly-agree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                    var agreesentiment = $("<span>", { id: dynamicId + "-only-agree", class: "fa fa-smile ms-2 my-like-agree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                    var neutralsentiment = $("<span>", { id: dynamicId + "-only-neutral", class: "fa fa-face-meh ms-2 my-like-neutral", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                    var disagreesentiment = $("<span>", { id: dynamicId + "-only-disagree", class: "fa fa-frown-open ms-2 my-like-disagree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                    var stronglydisagreesentiment = $("<span>", { id: dynamicId + "-strongly-disagree", class: "fa fa-frown ms-2 my-like-strongly-disagree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });

                    /**This captures the actual Id(Key) of the specific statement generated by the AI in the consultations table*/
                    var input = $("<input>", { id: "capconversationid", class: "d-none", value: item.id });

                    var dateString = item.creation;
                    var createdDate = new Date(dateString);
                    createdDate.setHours(createdDate.getHours() + 3);
                    var now = new Date();
                    var diffMs = now - createdDate;

                    /**Calculate the number of minutes, hours, days, weeks, months, and years since the record was created*/
                    var diffMins = Math.floor(diffMs / (1000 * 60));
                    var diffHrs = Math.floor(diffMs / (1000 * 60 * 60));
                    var diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
                    var diffWeeks = Math.floor(diffDays / 7);
                    var diffMonths = Math.floor(diffDays / 30);
                    var diffYears = Math.floor(diffDays / 365);

                    /**Determine the appropriate unit of time based on the elapsed time*/
                    if (diffMins < 120) {
                        var elapsed = "Madakika " + diffMins;
                    } else if (diffHrs < 48) {
                        var elapsed = "Masaa " + diffHrs;
                    } else if (diffDays < 14) {
                        var elapsed = "Masiku " + diffDays;
                    } else if (diffWeeks < 8) {
                        var elapsed = "Wiki " + diffWeeks;
                    } else if (diffMonths < 24) {
                        var elapsed = "Miezi " + diffMonths;
                    } else {
                        var elapsed = "Miaka " + diffYears;
                    }

                    var timeelapsed = $("<span>", { id: dynamicId, class: "fs-12 float-end", text: elapsed });
                }
                else {
                    var li = $("<li>", { class: "list-group-item bg-warm_light bg-warm_light_user text-warm" });
                    var span = $("<span>", { class: "fa fa-user me-3" });
                    var a = $("<a>", { href: "#", text: item.speaker + ": " + item.speech, class: "sidemenu-link" });

                    var dateString = item.creation;
                    var createdDate = new Date(dateString);
                    createdDate.setHours(createdDate.getHours() + 3);
                    var now = new Date();
                    var diffMs = now - createdDate;

                    /**Calculate the number of minutes, hours, days, weeks, months, and years since the record was created*/
                    var diffMins = Math.floor(diffMs / (1000 * 60));
                    var diffHrs = Math.floor(diffMs / (1000 * 60 * 60));
                    var diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
                    var diffWeeks = Math.floor(diffDays / 7);
                    var diffMonths = Math.floor(diffDays / 30);
                    var diffYears = Math.floor(diffDays / 365);

                    /**Determine the appropriate unit of time based on the elapsed time*/
                    if (diffMins < 120) {
                        var elapsed = "Madakika " + diffMins;
                    } else if (diffHrs < 48) {
                        var elapsed = "Masaa " + diffHrs;
                    } else if (diffDays < 14) {
                        var elapsed = "Masiku " + diffDays;
                    } else if (diffWeeks < 8) {
                        var elapsed = "Wiki " + diffWeeks;
                    } else if (diffMonths < 24) {
                        var elapsed = "Miezi " + diffMonths;
                    } else {
                        var elapsed = "Miaka " + diffYears;
                    }

                    var timeelapsed = $("<span>", { id: dynamicId, class: "fs-12 float-end", text: elapsed });
                }

                li.append(span);
                li.append(a);
                li.append(breakline);
                li.append(encouragement);
                li.append(timeelapsed);
                li.append(linebreak);
                li.append(stronglyagreesentiment);
                li.append(agreesentiment);
                li.append(neutralsentiment);
                li.append(disagreesentiment);
                li.append(stronglydisagreesentiment);
                li.append(input);
                li.append(dynamicIdinput);
                li.append(volumeicon);
                list.append(li);
            });
        },
        error: function (ex) {
            console.log(ex);
        }
    });
}

/**This code loads the latest group of conversations*/
function LoadLatestConvos() {
    $.ajax({
        type: "GET",
        url: "/Home/LoadLatestConvo",
        dataType: "json",
        success: function (data) {
            var list = $("#convo-data");
            list.empty();
            $.each(data, function (i, item) {
                if (item.speaker == "AI") {
                    var li = $("<li>", { class: "list-group-item bg-warm_light_ai text-warm" });
                    var span = $("<span>", { class: "fa fa-user-astronaut me-3" });
                    var a = $("<a>", { href: "#", text: item.speech, id: "ai-capconversation", class: "sidemenu-link" });
                    var breakline = $("<br />");
                    var volumeicon = $("<span>", { class: "fa fa-circle-play text-warm my-volume-button float-end", "data-bs-toggle": "modal", "data-bs-target": "#audioModal", style: "cursor: pointer; font-size: 20px;" });
                    var encouragement = $("<a>", { text: "Je, ni sura ipi inaambatana na maoni yako? ", class: "fs-12 sidemenu-link" });
                    var linebreak = $("<br />");
                    var dynamicId = "sentiment-id-" + item.id;
                    var dynamicIdinput = $("<input>", { id: "capdynamicid", class: "d-none", value: dynamicId });

                    /**These are the sentiment fields*/
                    var stronglyagreesentiment = $("<span>", { id: dynamicId + "-strongly-agree", class: "fa fa-smile-beam ms-2 my-like-strongly-agree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                    var agreesentiment = $("<span>", { id: dynamicId + "-only-agree", class: "fa fa-smile ms-2 my-like-agree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                    var neutralsentiment = $("<span>", { id: dynamicId + "-only-neutral", class: "fa fa-face-meh ms-2 my-like-neutral", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                    var disagreesentiment = $("<span>", { id: dynamicId + "-only-disagree", class: "fa fa-frown-open ms-2 my-like-disagree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                    var stronglydisagreesentiment = $("<span>", { id: dynamicId + "-strongly-disagree", class: "fa fa-frown ms-2 my-like-strongly-disagree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });

                    /**This captures the actual Id(Key) of the specific statement generated by the AI in the consultations table*/
                    var input = $("<input>", { id: "capconversationid", class: "d-none", value: item.id });

                    var dateString = item.creation;
                    var createdDate = new Date(dateString);
                    createdDate.setHours(createdDate.getHours() + 3);
                    var now = new Date();
                    var diffMs = now - createdDate;

                    /**Calculate the number of minutes, hours, days, weeks, months, and years since the record was created*/
                    var diffMins = Math.floor(diffMs / (1000 * 60));
                    var diffHrs = Math.floor(diffMs / (1000 * 60 * 60));
                    var diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
                    var diffWeeks = Math.floor(diffDays / 7);
                    var diffMonths = Math.floor(diffDays / 30);
                    var diffYears = Math.floor(diffDays / 365);

                    /**Determine the appropriate unit of time based on the elapsed time*/
                    if (diffMins < 120) {
                        var elapsed = "Madakika " + diffMins;
                    } else if (diffHrs < 48) {
                        var elapsed = "Masaa " + diffHrs;
                    } else if (diffDays < 14) {
                        var elapsed = "Masiku " + diffDays;
                    } else if (diffWeeks < 8) {
                        var elapsed = "Wiki " + diffWeeks;
                    } else if (diffMonths < 24) {
                        var elapsed = "Miezi " + diffMonths;
                    } else {
                        var elapsed = "Miaka " + diffYears;
                    }

                    var timeelapsed = $("<span>", { id: dynamicId, class: "fs-12 float-end", text: elapsed });
                }
                else {
                    var li = $("<li>", { class: "list-group-item bg-warm_light bg-warm_light_user text-warm" });
                    var span = $("<span>", { class: "fa fa-user me-3" });
                    var a = $("<a>", { href: "#", text: item.speaker + ": " + item.speech, class: "sidemenu-link" });

                    var dateString = item.creation;
                    var createdDate = new Date(dateString);
                    createdDate.setHours(createdDate.getHours() + 3);
                    var now = new Date();
                    var diffMs = now - createdDate;

                    /**Calculate the number of minutes, hours, days, weeks, months, and years since the record was created*/
                    var diffMins = Math.floor(diffMs / (1000 * 60));
                    var diffHrs = Math.floor(diffMs / (1000 * 60 * 60));
                    var diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
                    var diffWeeks = Math.floor(diffDays / 7);
                    var diffMonths = Math.floor(diffDays / 30);
                    var diffYears = Math.floor(diffDays / 365);

                    /**Determine the appropriate unit of time based on the elapsed time*/
                    if (diffMins < 120) {
                        var elapsed = "Madakika " + diffMins;
                    } else if (diffHrs < 48) {
                        var elapsed = "Masaa " + diffHrs;
                    } else if (diffDays < 14) {
                        var elapsed = "Masiku " + diffDays;
                    } else if (diffWeeks < 8) {
                        var elapsed = "Wiki " + diffWeeks;
                    } else if (diffMonths < 24) {
                        var elapsed = "Miezi " + diffMonths;
                    } else {
                        var elapsed = "Miaka " + diffYears;
                    }

                    var timeelapsed = $("<span>", { id: dynamicId, class: "fs-12 float-end", text: elapsed });
                }

                li.append(span);
                li.append(a);
                li.append(breakline);
                li.append(encouragement);
                li.append(timeelapsed);
                li.append(linebreak);
                li.append(stronglyagreesentiment);
                li.append(agreesentiment);
                li.append(neutralsentiment);
                li.append(disagreesentiment);
                li.append(stronglydisagreesentiment);
                li.append(input);
                li.append(dynamicIdinput);
                li.append(volumeicon);
                list.append(li);
            });
        },
        error: function (ex) {
            console.log(ex);
        }
    });
}

/**This code runs the processRequest function*/
$("#process_request").click(function () {
    processRequest();
});

$("#user_prompt").on("keypress", function (e) {
    if (e.which === 13) {
        processRequest();
    }
});

function processRequest() {
    var userPrompt = $("#user_prompt").val();
    var date = new Date();
    var formattedDate = date.toLocaleDateString("en-us", { month: "long", day: "numeric", year: "numeric" });
    var data = { Title: formattedDate, Speech: userPrompt };

    /**This code uploads the users prompts to the database*/
    $.ajax({
        type: "POST",
        url: "/Home/CreateUserPrompt",
        data: JSON.stringify(data),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (response) {
            LoadLatestConvos();
            GetAppResponse(userPrompt);
            $("#user_prompt").val("");
        },
        failure: function (response) {
            console.log(response);
        }
    });
}

/**This code gets the apps response by passing the user prompt to OpenAI API*/
function GetAppResponse(userPrompt) {
    $.ajax({
        type: "GET",
        url: "/Home/GetAppResponse",
        data: { userprompt: userPrompt },
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        success: function (response) {
            var appResponse = response;
            CreateAppResponse(appResponse);
        },
        failure: function (response) {
            console.log(response);
        }
    });
}

/**This code uploads the app response to the database*/
function CreateAppResponse(appResponse) {
    var date = new Date();
    var formattedDate = date.toLocaleDateString("en-us", { month: "long", day: "numeric", year: "numeric" });
    var data = { Title: formattedDate, Speech: appResponse };

    $.ajax({
        type: "POST",
        url: "/Home/CreateAppResponse",
        data: JSON.stringify(data),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (response) {
            LoadLatestResponse();
        },
        failure: function (response) {
            console.log(response);
        }
    });
}

/**This code loads the latest group of conversations*/
function LoadLatestResponse() {
    $.ajax({
        type: "GET",
        url: "/Home/LoadLatestConvo",
        dataType: "json",
        success: function (data) {
            var list = $("#convo-data");
            list.empty();
            $.each(data, function (i, item) {
                if (i === 0) {
                    /**This is the first item*/
                    if (item.speaker == "AI") {
                        var li = $("<li>", { class: "list-group-item bg-warm_light_ai text-warm" });
                        var span = $("<span>", { class: "fa fa-user-astronaut me-3" });
                        /**This code creates the cursor*/
                        var cursor = $("<span>", { class: "cursor cursor-width" });
                        cursor.text("|");
                        var a = $("<a>", { href: "#", text: item.speech, id: "ai-capconversation", class: "sidemenu-link" });
                        /**Additional elements*/
                        var breakline = $("<br />");
                        var volumeicon = $("<span>", { class: "fa fa-circle-play text-warm my-volume-button float-end", "data-bs-toggle": "modal", "data-bs-target": "#audioModal", style: "cursor: pointer; font-size: 20px;" });
                        var encouragement = $("<a>", { text: "Je, ni sura ipi inaambatana na maoni yako? ", class: "fs-12 sidemenu-link" });
                        var linebreak = $("<br />");
                        var dynamicId = "sentiment-id-" + item.id;
                        var dynamicIdinput = $("<input>", { id: "capdynamicid", class: "d-none", value: dynamicId });

                        /**These are the sentiment fields*/
                        var stronglyagreesentiment = $("<span>", { id: dynamicId + "-strongly-agree", class: "fa fa-smile-beam ms-2 my-like-strongly-agree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                        var agreesentiment = $("<span>", { id: dynamicId + "-only-agree", class: "fa fa-smile ms-2 my-like-agree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                        var neutralsentiment = $("<span>", { id: dynamicId + "-only-neutral", class: "fa fa-face-meh ms-2 my-like-neutral", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                        var disagreesentiment = $("<span>", { id: dynamicId + "-only-disagree", class: "fa fa-frown-open ms-2 my-like-disagree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                        var stronglydisagreesentiment = $("<span>", { id: dynamicId + "-strongly-disagree", class: "fa fa-frown ms-2 my-like-strongly-disagree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });

                        /**This captures the actual Id(Key) of the specific statement generated by the AI in the consultations table*/
                        var input = $("<input>", { id: "capconversationid", class: "d-none", value: item.id });

                        var dateString = item.creation;
                        var createdDate = new Date(dateString);
                        createdDate.setHours(createdDate.getHours() + 3);
                        var now = new Date();
                        var diffMs = now - createdDate;

                        /**Calculate the number of minutes, hours, days, weeks, months, and years since the record was created*/
                        var diffMins = Math.floor(diffMs / (1000 * 60));
                        var diffHrs = Math.floor(diffMs / (1000 * 60 * 60));
                        var diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
                        var diffWeeks = Math.floor(diffDays / 7);
                        var diffMonths = Math.floor(diffDays / 30);
                        var diffYears = Math.floor(diffDays / 365);

                        /**Determine the appropriate unit of time based on the elapsed time*/
                        if (diffMins < 120) {
                            var elapsed = "Madakika " + diffMins;
                        } else if (diffHrs < 48) {
                            var elapsed = "Masaa " + diffHrs;
                        } else if (diffDays < 14) {
                            var elapsed = "Masiku " + diffDays;
                        } else if (diffWeeks < 8) {
                            var elapsed = "Wiki " + diffWeeks;
                        } else if (diffMonths < 24) {
                            var elapsed = "Miezi " + diffMonths;
                        } else {
                            var elapsed = "Miaka " + diffYears;
                        }

                        var timeelapsed = $("<span>", { id: dynamicId, class: "fs-12 float-end", text: elapsed });
                    }
                    else {
                        var li = $("<li>", { class: "list-group-item bg-warm_light bg-warm_light_user text-warm" });
                        var span = $("<span>", { class: "fa fa-user me-3" });
                        var a = $("<a>", { href: "#", text: item.speaker + ": " + item.speech, class: "sidemenu-link" });

                        var dateString = item.creation;
                        var createdDate = new Date(dateString);
                        createdDate.setHours(createdDate.getHours() + 3);
                        var now = new Date();
                        var diffMs = now - createdDate;

                        /**Calculate the number of minutes, hours, days, weeks, months, and years since the record was created*/
                        var diffMins = Math.floor(diffMs / (1000 * 60));
                        var diffHrs = Math.floor(diffMs / (1000 * 60 * 60));
                        var diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
                        var diffWeeks = Math.floor(diffDays / 7);
                        var diffMonths = Math.floor(diffDays / 30);
                        var diffYears = Math.floor(diffDays / 365);

                        /**Determine the appropriate unit of time based on the elapsed time*/
                        if (diffMins < 120) {
                            var elapsed = "Madakika " + diffMins;
                        } else if (diffHrs < 48) {
                            var elapsed = "Masaa " + diffHrs;
                        } else if (diffDays < 14) {
                            var elapsed = "Masiku " + diffDays;
                        } else if (diffWeeks < 8) {
                            var elapsed = "Wiki " + diffWeeks;
                        } else if (diffMonths < 24) {
                            var elapsed = "Miezi " + diffMonths;
                        } else {
                            var elapsed = "Miaka " + diffYears;
                        }

                        var timeelapsed = $("<span>", { id: dynamicId, class: "fs-12 float-end", text: elapsed });
                    }

                    /**This code creates the impression that the computer is thinking*/
                    let delay = 100;
                    let text = a.text();
                    a.text("");

                    text.split("").forEach(function (char) {
                        setTimeout(function () {
                            a.append(char);
                            a.append(cursor);
                            cursor.addClass('typing');
                        }, delay);
                        delay += 100;
                    });

                    setTimeout(function () {
                        cursor.removeClass('typing');
                    }, delay);

                    li.append(span);
                    li.append(a);
                    li.append(breakline);
                    li.append(encouragement);
                    li.append(timeelapsed);
                    li.append(linebreak);
                    li.append(stronglyagreesentiment);
                    li.append(agreesentiment);
                    li.append(neutralsentiment);
                    li.append(disagreesentiment);
                    li.append(stronglydisagreesentiment);
                    li.append(input);
                    li.append(dynamicIdinput);
                    li.append(volumeicon);
                    list.append(li);
                }
                else {
                    if (item.speaker == "AI") {
                        var li = $("<li>", { class: "list-group-item bg-warm_light_ai text-warm" });
                        var span = $("<span>", { class: "fa fa-user-astronaut me-3" });
                        var a = $("<a>", { href: "#", text: item.speech, id: "ai-capconversation", class: "sidemenu-link" });
                        var breakline = $("<br />");
                        var volumeicon = $("<span>", { class: "fa fa-circle-play text-warm my-volume-button float-end", "data-bs-toggle": "modal", "data-bs-target": "#audioModal", style: "cursor: pointer; font-size: 20px;" });
                        var encouragement = $("<a>", { text: "Je, ni sura ipi inaambatana na maoni yako? ", class: "fs-12 sidemenu-link" });
                        var linebreak = $("<br />");
                        var dynamicId = "sentiment-id-" + item.id;
                        var dynamicIdinput = $("<input>", { id: "capdynamicid", class: "d-none", value: dynamicId });

                        /**These are the sentiment fields*/
                        var stronglyagreesentiment = $("<span>", { id: dynamicId + "-strongly-agree", class: "fa fa-smile-beam ms-2 my-like-strongly-agree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                        var agreesentiment = $("<span>", { id: dynamicId + "-only-agree", class: "fa fa-smile ms-2 my-like-agree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                        var neutralsentiment = $("<span>", { id: dynamicId + "-only-neutral", class: "fa fa-face-meh ms-2 my-like-neutral", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                        var disagreesentiment = $("<span>", { id: dynamicId + "-only-disagree", class: "fa fa-frown-open ms-2 my-like-disagree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });
                        var stronglydisagreesentiment = $("<span>", { id: dynamicId + "-strongly-disagree", class: "fa fa-frown ms-2 my-like-strongly-disagree", style: "cursor: pointer; color: #efb6e2; font-size: 20px;" });

                        /**This captures the actual Id(Key) of the specific statement generated by the AI in the consultations table*/
                        var input = $("<input>", { id: "capconversationid", class: "d-none", value: item.id });

                        var dateString = item.creation;
                        var createdDate = new Date(dateString);
                        createdDate.setHours(createdDate.getHours() + 3);
                        var now = new Date();
                        var diffMs = now - createdDate;

                        /**Calculate the number of minutes, hours, days, weeks, months, and years since the record was created*/
                        var diffMins = Math.floor(diffMs / (1000 * 60));
                        var diffHrs = Math.floor(diffMs / (1000 * 60 * 60));
                        var diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
                        var diffWeeks = Math.floor(diffDays / 7);
                        var diffMonths = Math.floor(diffDays / 30);
                        var diffYears = Math.floor(diffDays / 365);

                        /**Determine the appropriate unit of time based on the elapsed time*/
                        if (diffMins < 120) {
                            var elapsed = "Madakika " + diffMins;
                        } else if (diffHrs < 48) {
                            var elapsed = "Masaa " + diffHrs;
                        } else if (diffDays < 14) {
                            var elapsed = "Masiku " + diffDays;
                        } else if (diffWeeks < 8) {
                            var elapsed = "Wiki " + diffWeeks;
                        } else if (diffMonths < 24) {
                            var elapsed = "Miezi " + diffMonths;
                        } else {
                            var elapsed = "Miaka " + diffYears;
                        }

                        var timeelapsed = $("<span>", { id: dynamicId, class: "fs-12 float-end", text: elapsed });
                    }
                    else {
                        var li = $("<li>", { class: "list-group-item bg-warm_light bg-warm_light_user text-warm" });
                        var span = $("<span>", { class: "fa fa-user me-3" });
                        var a = $("<a>", { href: "#", text: item.speaker + ": " + item.speech, class: "sidemenu-link" });

                        var dateString = item.creation;
                        var createdDate = new Date(dateString);
                        createdDate.setHours(createdDate.getHours() + 3);
                        var now = new Date();
                        var diffMs = now - createdDate;

                        /**Calculate the number of minutes, hours, days, weeks, months, and years since the record was created*/
                        var diffMins = Math.floor(diffMs / (1000 * 60));
                        var diffHrs = Math.floor(diffMs / (1000 * 60 * 60));
                        var diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
                        var diffWeeks = Math.floor(diffDays / 7);
                        var diffMonths = Math.floor(diffDays / 30);
                        var diffYears = Math.floor(diffDays / 365);

                        /**Determine the appropriate unit of time based on the elapsed time*/
                        if (diffMins < 120) {
                            var elapsed = "Madakika " + diffMins;
                        } else if (diffHrs < 48) {
                            var elapsed = "Masaa " + diffHrs;
                        } else if (diffDays < 14) {
                            var elapsed = "Masiku " + diffDays;
                        } else if (diffWeeks < 8) {
                            var elapsed = "Wiki " + diffWeeks;
                        } else if (diffMonths < 24) {
                            var elapsed = "Miezi " + diffMonths;
                        } else {
                            var elapsed = "Miaka " + diffYears;
                        }

                        var timeelapsed = $("<span>", { id: dynamicId, class: "fs-12 float-end", text: elapsed });
                    }

                    li.append(span);
                    li.append(a);
                    li.append(breakline);
                    li.append(encouragement);
                    li.append(timeelapsed);
                    li.append(linebreak);
                    li.append(stronglyagreesentiment);
                    li.append(agreesentiment);
                    li.append(neutralsentiment);
                    li.append(disagreesentiment);
                    li.append(stronglydisagreesentiment);
                    li.append(input);
                    li.append(dynamicIdinput);
                    li.append(volumeicon);
                    list.append(li);
                }

            });
        },
        error: function (ex) {
            console.log(ex);
        }
    });
}

/**This code captures and retracts the strongly agree sentiment */
$("#convo-data").on("click", ".my-like-strongly-agree", function () {
    UpdateSentimentElements();
    /**This captures the actual Id(Key) of the specific statement generated by the AI in the consultations table*/
    var capconversationid = $(this).siblings('#capconversationid').val();
    var capdynamicid = $(this).attr('id');
    var sentiment = "Strongly_Agree";

    $.ajax({
        url: "/UserSentiments/GetSentiments",
        type: "GET",
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        data: { conversationid: capconversationid, dynamicid: capdynamicid, currentsentiment: sentiment },
        success: function (response) {
            console.log(response);
        },
    });
});

/**This code captures and retracts the agree sentiment */
$("#convo-data").on("click", ".my-like-agree", function () {
    UpdateSentimentElements();
    /**This captures the actual Id(Key) of the specific statement generated by the AI in the consultations table*/
    var capconversationid = $(this).siblings('#capconversationid').val();
    var capdynamicid = $(this).attr('id');
    var sentiment = "Agree";

    $.ajax({
        url: "/UserSentiments/GetSentiments",
        type: "GET",
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        data: { conversationid: capconversationid, dynamicid: capdynamicid, currentsentiment: sentiment },
        success: function (response) {
            console.log(response);
        },
    });
});

/**This code captures and retracts the neutral sentiment */
$("#convo-data").on("click", ".my-like-neutral", function () {
    UpdateSentimentElements();
    /**This captures the actual Id(Key) of the specific statement generated by the AI in the consultations table*/
    var capconversationid = $(this).siblings('#capconversationid').val();
    var capdynamicid = $(this).attr('id');
    var sentiment = "Neutral";

    $.ajax({
        url: "/UserSentiments/GetSentiments",
        type: "GET",
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        data: { conversationid: capconversationid, dynamicid: capdynamicid, currentsentiment: sentiment },
        success: function (response) {
            console.log(response);
        },
    });
});

/**This code captures and retracts the disagree sentiment */
$("#convo-data").on("click", ".my-like-disagree", function () {
    UpdateSentimentElements();
    /**This captures the actual Id(Key) of the specific statement generated by the AI in the consultations table*/
    var capconversationid = $(this).siblings('#capconversationid').val();
    var capdynamicid = $(this).attr('id');
    var sentiment = "Disagree";

    $.ajax({
        url: "/UserSentiments/GetSentiments",
        type: "GET",
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        data: { conversationid: capconversationid, dynamicid: capdynamicid, currentsentiment: sentiment },
        success: function (response) {
            console.log(response);
        },
    });
});

/**This code captures and retracts the strongly disagree sentiment */
$("#convo-data").on("click", ".my-like-strongly-disagree", function () {
    UpdateSentimentElements();
    /**This captures the actual Id(Key) of the specific statement generated by the AI in the consultations table*/
    var capconversationid = $(this).siblings('#capconversationid').val();
    var capdynamicid = $(this).attr('id');
    var sentiment = "Strongly_Disagree";

    $.ajax({
        url: "/UserSentiments/GetSentiments",
        type: "GET",
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        data: { conversationid: capconversationid, dynamicid: capdynamicid, currentsentiment: sentiment },
        success: function (response) {
            console.log(response);
        },
    });
});

/**This code updates the color of the like element*/
function UpdateSentimentElements() {
    $.ajax({
        type: "GET",
        url: "/UserSentiments/GetSentimentStatus",
        dataType: "json",
        success: function (data) {
            console.log(data);
            $.each(data, function (index, item) {
                if (item.sentimentstatus === "Strongly_Agree" && item.dynamicid.indexOf("-strongly-agree") !== -1) {
                    $("[id='" + item.dynamicid + "']").css("color", "#cb0c9f");

                    /**This code negatively colors the other emoticons that are not relevant to the retrieved record*/
                    const pattern = /^(\w+)-(\w+)-(\d+)-(\w+)-(\w+)$/;
                    const matches = pattern.exec(item.dynamicid);
                    const sentiment = matches[1];
                    const id = matches[2];
                    const uniquenumber = matches[3];
                    const parentvalues = sentiment + "-" + id + "-" + uniquenumber;

                    $("[id='" + parentvalues + "-only-agree']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-only-neutral']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-only-disagree']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-strongly-disagree']").css("color", "#efb6e2");
                }
                else if (item.sentimentstatus === "Agree" && item.dynamicid.indexOf("-only-agree") !== -1) {
                    $("[id='" + item.dynamicid + "']").css("color", "#cb0c9f");

                    /**This code negatively colors the other emoticons that are not relevant to the retrieved record*/
                    const pattern = /^(\w+)-(\w+)-(\d+)-(\w+)-(\w+)$/;
                    const matches = pattern.exec(item.dynamicid);
                    const sentiment = matches[1];
                    const id = matches[2];
                    const uniquenumber = matches[3];
                    const parentvalues = sentiment + "-" + id + "-" + uniquenumber;

                    $("[id='" + parentvalues + "-strongly-agree']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-only-neutral']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-only-disagree']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-strongly-disagree']").css("color", "#efb6e2");
                }
                else if (item.sentimentstatus === "Neutral" && item.dynamicid.indexOf("-only-neutral") !== -1) {
                    $("[id='" + item.dynamicid + "']").css("color", "#cb0c9f");

                    /**This code negatively colors the other emoticons that are not relevant to the retrieved record*/
                    const pattern = /^(\w+)-(\w+)-(\d+)-(\w+)-(\w+)$/;
                    const matches = pattern.exec(item.dynamicid);
                    const sentiment = matches[1];
                    const id = matches[2];
                    const uniquenumber = matches[3];
                    const parentvalues = sentiment + "-" + id + "-" + uniquenumber;

                    $("[id='" + parentvalues + "-strongly-agree']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-only-agree']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-only-disagree']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-strongly-disagree']").css("color", "#efb6e2");
                }
                else if (item.sentimentstatus === "Disagree" && item.dynamicid.indexOf("-only-disagree") !== -1) {
                    $("[id='" + item.dynamicid + "']").css("color", "#cb0c9f");

                    /**This code negatively colors the other emoticons that are not relevant to the retrieved record*/
                    const pattern = /^(\w+)-(\w+)-(\d+)-(\w+)-(\w+)$/;
                    const matches = pattern.exec(item.dynamicid);
                    const sentiment = matches[1];
                    const id = matches[2];
                    const uniquenumber = matches[3];
                    const parentvalues = sentiment + "-" + id + "-" + uniquenumber;

                    $("[id='" + parentvalues + "-strongly-agree']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-only-agree']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-only-neutral']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-strongly-disagree']").css("color", "#efb6e2");
                }
                else if (item.sentimentstatus === "Strongly_Disagree" && item.dynamicid.indexOf("-strongly-disagree") !== -1) {
                    $("[id='" + item.dynamicid + "']").css("color", "#cb0c9f");

                    /**This code negatively colors the other emoticons that are not relevant to the retrieved record*/
                    const pattern = /^(\w+)-(\w+)-(\d+)-(\w+)-(\w+)$/;
                    const matches = pattern.exec(item.dynamicid);
                    const sentiment = matches[1];
                    const id = matches[2];
                    const uniquenumber = matches[3];
                    const parentvalues = sentiment + "-" + id + "-" + uniquenumber;

                    $("[id='" + parentvalues + "-strongly-agree']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-only-agree']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-only-neutral']").css("color", "#efb6e2");
                    $("[id='" + parentvalues + "-only-disagree']").css("color", "#efb6e2");
                }
            });
        },
        error: function (ex) {
            console.log(ex);
        }
    });
}

/**This code performs TTS */
$("#convo-data").on("click", ".my-volume-button", function () {
    /**This captures the actual Id(Key) of the specific statement generated by the AI in the consultations table*/
    const audioPlayer = document.getElementById("audioPlayer");
    audioPlayer.src = "";
    var capconversation = $(this).siblings('#ai-capconversation').text();

    $.ajax({
        url: "/Home/SpeakText",
        type: "GET",
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        data: { text: capconversation },
        success: function (response) {
            if (response.success) {
                audioPlayer.src = "data:audio/mpeg;base64," + response.audioData;
            } else {
                alert(response.errorMessage);
            }
        },
        error: function (jqXHR, textStatus, errorThrown) {
            alert('Error: ' + errorThrown);
        }
    });
});